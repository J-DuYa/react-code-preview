{"version":3,"sources":["../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/slim/slim.js","../node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","regexp","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","closing","chain","newtok","tokenize","push","tokenBase","sol","readBlockComment","eatSpace","m","phrase","mayIndent","ch","next","readQuoted","start","pos","depth","found","escaped","indexOf","regexpAhead","embed","eat","delim","propertyIsEnumerable","skipToEnd","pop","eatWhile","varList","lastTok","more","tokenBaseUntilBrace","peek","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","indented","indentUnit","continuedLine","indentation","kwtype","thisTok","word","column","firstChar","charAt","ct","closed","electricInput","lineComment","fold","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","stack","parent","finishContinue","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","offset","idx","restore","backup","startHtmlLine","lastTokenize","htmlLine","startHtmlMode","comment","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","query","mimeModes","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","startSubMode","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","blankLine","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","prop","inText","parser","inBlock","doctype","baseState","tagStart","closure","isInAttribute","inAttribute","stringStartCol","terminator","Context","this","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","alignCDATA","tagAfter","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","reverse"],"mappings":"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","file":"static/js/434.c0e0721c.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) dest.unshift(source[i]);\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function (state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function (state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ruby\", function (config) {\n    function wordObj(words) {\n      var o = {};\n\n      for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n\n      return o;\n    }\n\n    var keywords = wordObj([\"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\", \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\", \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\", \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"]);\n    var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\", \"catch\", \"loop\", \"proc\", \"begin\"]);\n    var dedentWords = wordObj([\"end\", \"until\"]);\n    var opening = {\n      \"[\": \"]\",\n      \"{\": \"}\",\n      \"(\": \")\"\n    };\n    var closing = {\n      \"]\": \"[\",\n      \"}\": \"{\",\n      \")\": \"(\"\n    };\n    var curPunc;\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n        state.tokenize.push(readBlockComment);\n        return \"comment\";\n      }\n\n      if (stream.eatSpace()) return null;\n      var ch = stream.next(),\n          m;\n\n      if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n        return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n      } else if (ch == \"/\") {\n        if (regexpAhead(stream)) return chain(readQuoted(ch, \"string-2\", true), stream, state);else return \"operator\";\n      } else if (ch == \"%\") {\n        var style = \"string\",\n            embed = true;\n        if (stream.eat(\"s\")) style = \"atom\";else if (stream.eat(/[WQ]/)) style = \"string\";else if (stream.eat(/[r]/)) style = \"string-2\";else if (stream.eat(/[wxq]/)) {\n          style = \"string\";\n          embed = false;\n        }\n        var delim = stream.eat(/[^\\w\\s=]/);\n        if (!delim) return \"operator\";\n        if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n        return chain(readQuoted(delim, style, embed, true), stream, state);\n      } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n        return chain(readHereDoc(m[2], m[1]), stream, state);\n      } else if (ch == \"0\") {\n        if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);\n        return \"number\";\n      } else if (/\\d/.test(ch)) {\n        stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n        return \"number\";\n      } else if (ch == \"?\") {\n        while (stream.match(/^\\\\[CM]-/)) {}\n\n        if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);else stream.next();\n        return \"string\";\n      } else if (ch == \":\") {\n        if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n        if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state); // :> :>> :< :<< are valid symbols\n\n        if (stream.eat(/[\\<\\>]/)) {\n          stream.eat(/[\\<\\>]/);\n          return \"atom\";\n        } // :+ :- :/ :* :| :& :! are valid symbols\n\n\n        if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n          return \"atom\";\n        } // Symbols can't start by a digit\n\n\n        if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n          stream.eatWhile(/[\\w$\\xa1-\\uffff]/); // Only one ? ! = is allowed and only as the last character\n\n          stream.eat(/[\\?\\!\\=]/);\n          return \"atom\";\n        }\n\n        return \"operator\";\n      } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n        stream.eat(\"@\");\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        return \"variable-2\";\n      } else if (ch == \"$\") {\n        if (stream.eat(/[a-zA-Z_]/)) {\n          stream.eatWhile(/[\\w]/);\n        } else if (stream.eat(/\\d/)) {\n          stream.eat(/\\d/);\n        } else {\n          stream.next(); // Must be a special global like $: or $!\n        }\n\n        return \"variable-3\";\n      } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        stream.eat(/[\\?\\!]/);\n        if (stream.eat(\":\")) return \"atom\";\n        return \"ident\";\n      } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n        curPunc = \"|\";\n        return null;\n      } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      } else if (ch == \"-\" && stream.eat(\">\")) {\n        return \"arrow\";\n      } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n        var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n        if (ch == \".\" && !more) curPunc = \".\";\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function regexpAhead(stream) {\n      var start = stream.pos,\n          depth = 0,\n          next,\n          found = false,\n          escaped = false;\n\n      while ((next = stream.next()) != null) {\n        if (!escaped) {\n          if (\"[{(\".indexOf(next) > -1) {\n            depth++;\n          } else if (\"]})\".indexOf(next) > -1) {\n            depth--;\n            if (depth < 0) break;\n          } else if (next == \"/\" && depth == 0) {\n            found = true;\n            break;\n          }\n\n          escaped = next == \"\\\\\";\n        } else {\n          escaped = false;\n        }\n      }\n\n      stream.backUp(stream.pos - start);\n      return found;\n    }\n\n    function tokenBaseUntilBrace(depth) {\n      if (!depth) depth = 1;\n      return function (stream, state) {\n        if (stream.peek() == \"}\") {\n          if (depth == 1) {\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          } else {\n            state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n          }\n        } else if (stream.peek() == \"{\") {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenBaseOnce() {\n      var alreadyCalled = false;\n      return function (stream, state) {\n        if (alreadyCalled) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length - 1](stream, state);\n        }\n\n        alreadyCalled = true;\n        return tokenBase(stream, state);\n      };\n    }\n\n    function readQuoted(quote, style, embed, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        if (state.context.type === 'read-quoted-paused') {\n          state.context = state.context.prev;\n          stream.eat(\"}\");\n        }\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              if (quote == \"}\") {\n                state.context = {\n                  prev: state.context,\n                  type: 'read-quoted-paused'\n                };\n              }\n\n              state.tokenize.push(tokenBaseUntilBrace());\n              break;\n            } else if (/[@\\$]/.test(stream.peek())) {\n              state.tokenize.push(tokenBaseOnce());\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        return style;\n      };\n    }\n\n    function readHereDoc(phrase, mayIndent) {\n      return function (stream, state) {\n        if (mayIndent) stream.eatSpace();\n        if (stream.match(phrase)) state.tokenize.pop();else stream.skipToEnd();\n        return \"string\";\n      };\n    }\n\n    function readBlockComment(stream, state) {\n      if (stream.sol() && stream.match(\"=end\") && stream.eol()) state.tokenize.pop();\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenize: [tokenBase],\n          indented: 0,\n          context: {\n            type: \"top\",\n            indented: -config.indentUnit\n          },\n          continuedLine: false,\n          lastTok: null,\n          varList: false\n        };\n      },\n      token: function (stream, state) {\n        curPunc = null;\n        if (stream.sol()) state.indented = stream.indentation();\n        var style = state.tokenize[state.tokenize.length - 1](stream, state),\n            kwtype;\n        var thisTok = curPunc;\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = state.lastTok == \".\" ? \"property\" : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : /^[A-Z]/.test(word) ? \"tag\" : state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList ? \"def\" : \"variable\";\n\n          if (style == \"keyword\") {\n            thisTok = word;\n            if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation()) kwtype = \"indent\";else if (word == \"do\" && state.context.indented < state.indented) kwtype = \"indent\";\n          }\n        }\n\n        if (curPunc || style && style != \"comment\") state.lastTok = thisTok;\n        if (curPunc == \"|\") state.varList = !state.varList;\n        if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc)) state.context = {\n          prev: state.context,\n          type: curPunc || style,\n          indented: state.indented\n        };else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev) state.context = state.context.prev;\n        if (stream.eol()) state.continuedLine = curPunc == \"\\\\\" || style == \"operator\";\n        return style;\n      },\n      indent: function (state, textAfter) {\n        if (state.tokenize[state.tokenize.length - 1] != tokenBase) return CodeMirror.Pass;\n        var firstChar = textAfter && textAfter.charAt(0);\n        var ct = state.context;\n        var closed = ct.type == closing[firstChar] || ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n        return ct.indented + (closed ? 0 : config.indentUnit) + (state.continuedLine ? config.indentUnit : 0);\n      },\n      electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function (config) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"htmlmixed\"\n    });\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = {\n      html: htmlMode,\n      ruby: rubyMode\n    };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\",\n      // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\",\n      // no highlighting so far\n      creole: \"text/x-creole\",\n      // no highlighting so far\n      wiki: \"text/x-wiki\",\n      // no highlighting so far\n      mediawiki: \"text/x-mediawiki\",\n      // no highlighting so far\n      rdoc: \"text/x-rdoc\",\n      // no highlighting so far\n      builder: \"text/x-builder\",\n      // no highlighting so far\n      nokogiri: \"text/x-nokogiri\",\n      // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n\n    var embeddedRegexp = function (map) {\n      var arr = [];\n\n      for (var key in map) arr.push(key);\n\n      return new RegExp(\"^(\" + arr.join('|') + \"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\" + nameStartChar + \"](?::[\" + nameChar + \"]|[\" + nameChar + \"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\" + nameStartChar + \"][:\\\\.\" + nameChar + \"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\" + nameStartChar + \"][:\\\\.\" + nameChar + \"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function (stream, state) {\n        state.tokenize = tokenize;\n\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n\n        return state.tokenize(stream, state);\n      };\n\n      return function (stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n\n        var style = tokenize(stream, state);\n\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n\n        return style;\n      };\n    }\n\n    function commaContinuable(column, tokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function (stream, state) {\n        var ch = stream.peek();\n\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function startRubySplat(tokenize) {\n      var rubyState;\n\n      var runSplat = function (stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n\n          stream.next();\n        }\n\n        return ruby(stream, state);\n      };\n\n      return function (stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n\n      return html(stream, state);\n    }\n\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function (stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset,\n        // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n\n      stream.next();\n      return null;\n    }\n\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n\n      return attributeWrapper(stream, state);\n    }\n\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n\n      var factory = CodeMirror.modes[query];\n\n      if (factory) {\n        return factory(config, {\n          name: query\n        });\n      }\n\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n      state.subMode = subMode;\n      state.subState = subState;\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n\n      return slimClass(stream, state);\n    }\n\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n\n      return slimClass(stream, state);\n    }\n\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n\n      return slimContent(stream, state);\n    }\n\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      } // should never happen, because of forward lookup\n\n\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n\n        return style;\n      };\n    }\n\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n\n      if (stream.match(/^\\/$/)) {\n        // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n\n      if (stream.match(/^:/)) {\n        // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function () {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n      copyState: function (state) {\n        return {\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n      token: function (stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n      blankLine: function (state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n      innerMode: function (state) {\n        if (state.subMode) return {\n          state: state.subState,\n          mode: state.subMode\n        };\n        return {\n          state: state,\n          mode: mode\n        };\n      } //indent: function(state) {\n      //  return state.indented;\n      //}\n\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) config[prop] = defaults[prop];\n\n    for (var prop in config_) config[prop] = config_[prop]; // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function (baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function (stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function (state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) context = context.prev;\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function (state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function (state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function (state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) if (cx.tagName) context.push(cx.tagName);\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});"],"sourceRoot":""}