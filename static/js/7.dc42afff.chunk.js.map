{"version":3,"sources":["../node_modules/codemirror/mode/coffeescript/coffeescript.js","../node_modules/codemirror/mode/handlebars/handlebars.js","../node_modules/codemirror/mode/sass/sass.js","../node_modules/codemirror/mode/vue/vue.js","../node_modules/codemirror/addon/mode/simple.js","../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/addon/mode/multiplex.js"],"names":["CodeMirror","defineMode","conf","parserConf","ERRORCLASS","wordRegexp","words","RegExp","join","operators","delimiters","identifiers","atProp","wordOperators","indentKeywords","keywords","concat","stringPrefixes","regexPrefixes","constants","tokenBase","stream","state","sol","scope","align","scopeOffset","offset","eatSpace","lineOffset","indentation","type","dedent","ch","peek","match","skipToEnd","tokenize","longComment","floatLiteral","backUp","intLiteral","tokenFactory","current","prop","next","delimiter","singleline","outclass","eol","eatWhile","eat","singleLineStringErrors","indent","alignOffset","prev","indentUnit","column","length","_indent","matched","startState","basecolumn","token","fillAlign","style","delimiter_index","indexOf","slice","exec","tokenLexer","text","closer","charAt","closes","lineComment","fold","defineMIME","mod","defineSimpleMode","start","regex","push","handlebars","pop","dash_comment","comment","meta","blockCommentStart","blockCommentEnd","config","parserConfig","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","word","cssMode","mimeModes","propertyKeywords","colorKeywords","valueKeywords","fontProperties","keywordsRegexp","opRegexp","pseudoElementsRegexp","isEndLine","urlTokens","tokenizer","buildStringTokenizer","multiLine","skipTo","quote","greedy","stringTokenizer","nextChar","peekChar","previousChar","string","pos","cursorHalf","buildInterpolationTokenizer","currentTokenizer","indentCount","currentOffset","scopes","unshift","shift","toLowerCase","hasOwnProperty","prevProp","definedVars","definedMixins","withCurrentIndent","newScopes","i","lastToken","content","tagLanguages","script","template","overlayMode","backdrop","name","tags","ensureState","states","Error","toRegex","val","caret","flags","ignoreCase","source","String","Rule","data","this","apply","replace","result","asToken","tokenFunction","pending","pend","local","end","tok","endToken","localState","m","endScan","index","curState","rule","matches","stack","enterLocalMode","j","cmp","a","b","props","spec","pers","persistent","p","persistentStates","lState","forceEnd","indentFunction","textAfter","line","dontIndentStates","arr","Pass","rules","scan","dedentIfLineStart","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","combineTokens","electricChars","blankLine","baseToken","overlayToken","outer","others","Array","prototype","call","arguments","pattern","from","returnEnd","found","innerActive","inner","curInner","oldContent","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken"],"mappings":"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","file":"static/js/7.dc42afff.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"coffeescript\", function (conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n    }\n\n    var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n    var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n    var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n    var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n    var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\", \"isnt\", \"in\", \"instanceof\", \"typeof\"]);\n    var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\", \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n    var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\", \"do\", \"in\", \"of\", \"new\", \"return\", \"then\", \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n    var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n    indentKeywords = wordRegexp(indentKeywords);\n    var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n    var regexPrefixes = /^(\\/{3}|\\/)/;\n    var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n    var constants = wordRegexp(commonConstants); // Tokenizers\n\n    function tokenBase(stream, state) {\n      // Handle scope changes\n      if (stream.sol()) {\n        if (state.scope.align === null) state.scope.align = false;\n        var scopeOffset = state.scope.offset;\n\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n\n          if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n            return \"indent\";\n          } else if (lineOffset < scopeOffset) {\n            return \"dedent\";\n          }\n\n          return null;\n        } else {\n          if (scopeOffset > 0) {\n            dedent(stream, state);\n          }\n        }\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var ch = stream.peek(); // Handle docco title comment (single line)\n\n      if (stream.match(\"####\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      } // Handle multi line comments\n\n\n      if (stream.match(\"###\")) {\n        state.tokenize = longComment;\n        return state.tokenize(stream, state);\n      } // Single line comment\n\n\n      if (ch === \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } // Handle number literals\n\n\n      if (stream.match(/^-?[0-9\\.]/, false)) {\n        var floatLiteral = false; // Floats\n\n        if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^-?\\d+\\.\\d*/)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^-?\\.\\d+/)) {\n          floatLiteral = true;\n        }\n\n        if (floatLiteral) {\n          // prevent from getting extra . on 1..\n          if (stream.peek() == \".\") {\n            stream.backUp(1);\n          }\n\n          return \"number\";\n        } // Integers\n\n\n        var intLiteral = false; // Hex\n\n        if (stream.match(/^-?0x[0-9a-f]+/i)) {\n          intLiteral = true;\n        } // Decimal\n\n\n        if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n          intLiteral = true;\n        } // Zero by itself with no other piece of number.\n\n\n        if (stream.match(/^-?0(?![\\dx])/i)) {\n          intLiteral = true;\n        }\n\n        if (intLiteral) {\n          return \"number\";\n        }\n      } // Handle strings\n\n\n      if (stream.match(stringPrefixes)) {\n        state.tokenize = tokenFactory(stream.current(), false, \"string\");\n        return state.tokenize(stream, state);\n      } // Handle regex literals\n\n\n      if (stream.match(regexPrefixes)) {\n        if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) {\n          // prevent highlight of division\n          state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n          return state.tokenize(stream, state);\n        } else {\n          stream.backUp(1);\n        }\n      } // Handle operators and delimiters\n\n\n      if (stream.match(operators) || stream.match(wordOperators)) {\n        return \"operator\";\n      }\n\n      if (stream.match(delimiters)) {\n        return \"punctuation\";\n      }\n\n      if (stream.match(constants)) {\n        return \"atom\";\n      }\n\n      if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n        return \"property\";\n      }\n\n      if (stream.match(keywords)) {\n        return \"keyword\";\n      }\n\n      if (stream.match(identifiers)) {\n        return \"variable\";\n      } // Handle non-detected items\n\n\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function tokenFactory(delimiter, singleline, outclass) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\/\\\\]/);\n\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n\n            if (singleline && stream.eol()) {\n              return outclass;\n            }\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenBase;\n            return outclass;\n          } else {\n            stream.eat(/['\"\\/]/);\n          }\n        }\n\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) {\n            outclass = ERRORCLASS;\n          } else {\n            state.tokenize = tokenBase;\n          }\n        }\n\n        return outclass;\n      };\n    }\n\n    function longComment(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^#]/);\n\n        if (stream.match(\"###\")) {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        stream.eatWhile(\"#\");\n      }\n\n      return \"comment\";\n    }\n\n    function indent(stream, state, type) {\n      type = type || \"coffee\";\n      var offset = 0,\n          align = false,\n          alignOffset = null;\n\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (scope.type === \"coffee\" || scope.type == \"}\") {\n          offset = scope.offset + conf.indentUnit;\n          break;\n        }\n      }\n\n      if (type !== \"coffee\") {\n        align = null;\n        alignOffset = stream.column() + stream.current().length;\n      } else if (state.scope.align) {\n        state.scope.align = false;\n      }\n\n      state.scope = {\n        offset: offset,\n        type: type,\n        prev: state.scope,\n        align: align,\n        alignOffset: alignOffset\n      };\n    }\n\n    function dedent(stream, state) {\n      if (!state.scope.prev) return;\n\n      if (state.scope.type === \"coffee\") {\n        var _indent = stream.indentation();\n\n        var matched = false;\n\n        for (var scope = state.scope; scope; scope = scope.prev) {\n          if (_indent === scope.offset) {\n            matched = true;\n            break;\n          }\n        }\n\n        if (!matched) {\n          return true;\n        }\n\n        while (state.scope.prev && state.scope.offset !== _indent) {\n          state.scope = state.scope.prev;\n        }\n\n        return false;\n      } else {\n        state.scope = state.scope.prev;\n        return false;\n      }\n    }\n\n    function tokenLexer(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current(); // Handle scope changes.\n\n      if (current === \"return\") {\n        state.dedent = true;\n      }\n\n      if ((current === \"->\" || current === \"=>\") && stream.eol() || style === \"indent\") {\n        indent(stream, state);\n      }\n\n      var delimiter_index = \"[({\".indexOf(current);\n\n      if (delimiter_index !== -1) {\n        indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index + 1));\n      }\n\n      if (indentKeywords.exec(current)) {\n        indent(stream, state);\n      }\n\n      if (current == \"then\") {\n        dedent(stream, state);\n      }\n\n      if (style === \"dedent\") {\n        if (dedent(stream, state)) {\n          return ERRORCLASS;\n        }\n      }\n\n      delimiter_index = \"])}\".indexOf(current);\n\n      if (delimiter_index !== -1) {\n        while (state.scope.type == \"coffee\" && state.scope.prev) state.scope = state.scope.prev;\n\n        if (state.scope.type == current) state.scope = state.scope.prev;\n      }\n\n      if (state.dedent && stream.eol()) {\n        if (state.scope.type == \"coffee\" && state.scope.prev) state.scope = state.scope.prev;\n        state.dedent = false;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function (basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scope: {\n            offset: basecolumn || 0,\n            type: \"coffee\",\n            prev: null,\n            align: false\n          },\n          prop: false,\n          dedent: 0\n        };\n      },\n      token: function (stream, state) {\n        var fillAlign = state.scope.align === null && state.scope;\n        if (fillAlign && stream.sol()) fillAlign.align = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\") {\n          if (fillAlign) fillAlign.align = true;\n          state.prop = style == \"punctuation\" && stream.current() == \".\";\n        }\n\n        return style;\n      },\n      indent: function (state, text) {\n        if (state.tokenize != tokenBase) return 0;\n        var scope = state.scope;\n        var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n        if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n        var closes = closer && scope.type === text.charAt(0);\n        if (scope.align) return scope.alignOffset - (closes ? 1 : 0);else return (closes ? scope.prev : scope).offset;\n      },\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  }); // IANA registered media type\n  // https://www.iana.org/assignments/media-types/\n\n  CodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n  CodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\n  CodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [{\n      regex: /\\{\\{!--/,\n      push: \"dash_comment\",\n      token: \"comment\"\n    }, {\n      regex: /\\{\\{!/,\n      push: \"comment\",\n      token: \"comment\"\n    }, {\n      regex: /\\{\\{/,\n      push: \"handlebars\",\n      token: \"tag\"\n    }],\n    handlebars: [{\n      regex: /\\}\\}/,\n      pop: true,\n      token: \"tag\"\n    }, // Double and single quotes\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }, {\n      regex: /'(?:[^\\\\']|\\\\.)*'?/,\n      token: \"string\"\n    }, // Handlebars keywords\n    {\n      regex: />|[#\\/]([A-Za-z_]\\w*)/,\n      token: \"keyword\"\n    }, {\n      regex: /(?:else|this)\\b/,\n      token: \"keyword\"\n    }, // Numeral\n    {\n      regex: /\\d+/i,\n      token: \"number\"\n    }, // Atoms like = and .\n    {\n      regex: /=|~|@|true|false/,\n      token: \"atom\"\n    }, // Paths\n    {\n      regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/,\n      token: \"variable-2\"\n    }],\n    dash_comment: [{\n      regex: /--\\}\\}/,\n      pop: true,\n      token: \"comment\"\n    }, // Commented code\n    {\n      regex: /./,\n      token: \"comment\"\n    }],\n    comment: [{\n      regex: /\\}\\}/,\n      pop: true,\n      token: \"comment\"\n    }, {\n      regex: /./,\n      token: \"comment\"\n    }],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n  CodeMirror.defineMode(\"handlebars\", function (config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, parserConfig.base), {\n      open: \"{{\",\n      close: \"}}\",\n      mode: handlebars,\n      parseDelimiters: true\n    });\n  });\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"sass\", function (config) {\n    var cssMode = CodeMirror.mimeModes[\"text/css\"];\n    var propertyKeywords = cssMode.propertyKeywords || {},\n        colorKeywords = cssMode.colorKeywords || {},\n        valueKeywords = cssMode.valueKeywords || {},\n        fontProperties = cssMode.fontProperties || {};\n\n    function tokenRegexp(words) {\n      return new RegExp(\"^\" + words.join(\"|\"));\n    }\n\n    var keywords = [\"true\", \"false\", \"null\", \"auto\"];\n    var keywordsRegexp = new RegExp(\"^\" + keywords.join(\"|\"));\n    var operators = [\"\\\\(\", \"\\\\)\", \"=\", \">\", \"<\", \"==\", \">=\", \"<=\", \"\\\\+\", \"-\", \"\\\\!=\", \"/\", \"\\\\*\", \"%\", \"and\", \"or\", \"not\", \";\", \"\\\\{\", \"\\\\}\", \":\"];\n    var opRegexp = tokenRegexp(operators);\n    var pseudoElementsRegexp = /^::?[a-zA-Z_][\\w\\-]*/;\n    var word;\n\n    function isEndLine(stream) {\n      return !stream.peek() || stream.match(/\\s+$/, false);\n    }\n\n    function urlTokens(stream, state) {\n      var ch = stream.peek();\n\n      if (ch === \")\") {\n        stream.next();\n        state.tokenizer = tokenBase;\n        return \"operator\";\n      } else if (ch === \"(\") {\n        stream.next();\n        stream.eatSpace();\n        return \"operator\";\n      } else if (ch === \"'\" || ch === '\"') {\n        state.tokenizer = buildStringTokenizer(stream.next());\n        return \"string\";\n      } else {\n        state.tokenizer = buildStringTokenizer(\")\", false);\n        return \"string\";\n      }\n    }\n\n    function comment(indentation, multiLine) {\n      return function (stream, state) {\n        if (stream.sol() && stream.indentation() <= indentation) {\n          state.tokenizer = tokenBase;\n          return tokenBase(stream, state);\n        }\n\n        if (multiLine && stream.skipTo(\"*/\")) {\n          stream.next();\n          stream.next();\n          state.tokenizer = tokenBase;\n        } else {\n          stream.skipToEnd();\n        }\n\n        return \"comment\";\n      };\n    }\n\n    function buildStringTokenizer(quote, greedy) {\n      if (greedy == null) {\n        greedy = true;\n      }\n\n      function stringTokenizer(stream, state) {\n        var nextChar = stream.next();\n        var peekChar = stream.peek();\n        var previousChar = stream.string.charAt(stream.pos - 2);\n        var endingString = nextChar !== \"\\\\\" && peekChar === quote || nextChar === quote && previousChar !== \"\\\\\";\n\n        if (endingString) {\n          if (nextChar !== quote && greedy) {\n            stream.next();\n          }\n\n          if (isEndLine(stream)) {\n            state.cursorHalf = 0;\n          }\n\n          state.tokenizer = tokenBase;\n          return \"string\";\n        } else if (nextChar === \"#\" && peekChar === \"{\") {\n          state.tokenizer = buildInterpolationTokenizer(stringTokenizer);\n          stream.next();\n          return \"operator\";\n        } else {\n          return \"string\";\n        }\n      }\n\n      return stringTokenizer;\n    }\n\n    function buildInterpolationTokenizer(currentTokenizer) {\n      return function (stream, state) {\n        if (stream.peek() === \"}\") {\n          stream.next();\n          state.tokenizer = currentTokenizer;\n          return \"operator\";\n        } else {\n          return tokenBase(stream, state);\n        }\n      };\n    }\n\n    function indent(state) {\n      if (state.indentCount == 0) {\n        state.indentCount++;\n        var lastScopeOffset = state.scopes[0].offset;\n        var currentOffset = lastScopeOffset + config.indentUnit;\n        state.scopes.unshift({\n          offset: currentOffset\n        });\n      }\n    }\n\n    function dedent(state) {\n      if (state.scopes.length == 1) return;\n      state.scopes.shift();\n    }\n\n    function tokenBase(stream, state) {\n      var ch = stream.peek(); // Comment\n\n      if (stream.match(\"/*\")) {\n        state.tokenizer = comment(stream.indentation(), true);\n        return state.tokenizer(stream, state);\n      }\n\n      if (stream.match(\"//\")) {\n        state.tokenizer = comment(stream.indentation(), false);\n        return state.tokenizer(stream, state);\n      } // Interpolation\n\n\n      if (stream.match(\"#{\")) {\n        state.tokenizer = buildInterpolationTokenizer(tokenBase);\n        return \"operator\";\n      } // Strings\n\n\n      if (ch === '\"' || ch === \"'\") {\n        stream.next();\n        state.tokenizer = buildStringTokenizer(ch);\n        return \"string\";\n      }\n\n      if (!state.cursorHalf) {\n        // state.cursorHalf === 0\n        // first half i.e. before : for key-value pairs\n        // including selectors\n        if (ch === \"-\") {\n          if (stream.match(/^-\\w+-/)) {\n            return \"meta\";\n          }\n        }\n\n        if (ch === \".\") {\n          stream.next();\n\n          if (stream.match(/^[\\w-]+/)) {\n            indent(state);\n            return \"qualifier\";\n          } else if (stream.peek() === \"#\") {\n            indent(state);\n            return \"tag\";\n          }\n        }\n\n        if (ch === \"#\") {\n          stream.next(); // ID selectors\n\n          if (stream.match(/^[\\w-]+/)) {\n            indent(state);\n            return \"builtin\";\n          }\n\n          if (stream.peek() === \"#\") {\n            indent(state);\n            return \"tag\";\n          }\n        } // Variables\n\n\n        if (ch === \"$\") {\n          stream.next();\n          stream.eatWhile(/[\\w-]/);\n          return \"variable-2\";\n        } // Numbers\n\n\n        if (stream.match(/^-?[0-9\\.]+/)) return \"number\"; // Units\n\n        if (stream.match(/^(px|em|in)\\b/)) return \"unit\";\n        if (stream.match(keywordsRegexp)) return \"keyword\";\n\n        if (stream.match(/^url/) && stream.peek() === \"(\") {\n          state.tokenizer = urlTokens;\n          return \"atom\";\n        }\n\n        if (ch === \"=\") {\n          // Match shortcut mixin definition\n          if (stream.match(/^=[\\w-]+/)) {\n            indent(state);\n            return \"meta\";\n          }\n        }\n\n        if (ch === \"+\") {\n          // Match shortcut mixin definition\n          if (stream.match(/^\\+[\\w-]+/)) {\n            return \"variable-3\";\n          }\n        }\n\n        if (ch === \"@\") {\n          if (stream.match(/@extend/)) {\n            if (!stream.match(/\\s*[\\w]/)) dedent(state);\n          }\n        } // Indent Directives\n\n\n        if (stream.match(/^@(else if|if|media|else|for|each|while|mixin|function)/)) {\n          indent(state);\n          return \"def\";\n        } // Other Directives\n\n\n        if (ch === \"@\") {\n          stream.next();\n          stream.eatWhile(/[\\w-]/);\n          return \"def\";\n        }\n\n        if (stream.eatWhile(/[\\w-]/)) {\n          if (stream.match(/ *: *[\\w-\\+\\$#!\\(\"']/, false)) {\n            word = stream.current().toLowerCase();\n            var prop = state.prevProp + \"-\" + word;\n\n            if (propertyKeywords.hasOwnProperty(prop)) {\n              return \"property\";\n            } else if (propertyKeywords.hasOwnProperty(word)) {\n              state.prevProp = word;\n              return \"property\";\n            } else if (fontProperties.hasOwnProperty(word)) {\n              return \"property\";\n            }\n\n            return \"tag\";\n          } else if (stream.match(/ *:/, false)) {\n            indent(state);\n            state.cursorHalf = 1;\n            state.prevProp = stream.current().toLowerCase();\n            return \"property\";\n          } else if (stream.match(/ *,/, false)) {\n            return \"tag\";\n          } else {\n            indent(state);\n            return \"tag\";\n          }\n        }\n\n        if (ch === \":\") {\n          if (stream.match(pseudoElementsRegexp)) {\n            // could be a pseudo-element\n            return \"variable-3\";\n          }\n\n          stream.next();\n          state.cursorHalf = 1;\n          return \"operator\";\n        }\n      } // cursorHalf===0 ends here\n      else {\n          if (ch === \"#\") {\n            stream.next(); // Hex numbers\n\n            if (stream.match(/[0-9a-fA-F]{6}|[0-9a-fA-F]{3}/)) {\n              if (isEndLine(stream)) {\n                state.cursorHalf = 0;\n              }\n\n              return \"number\";\n            }\n          } // Numbers\n\n\n          if (stream.match(/^-?[0-9\\.]+/)) {\n            if (isEndLine(stream)) {\n              state.cursorHalf = 0;\n            }\n\n            return \"number\";\n          } // Units\n\n\n          if (stream.match(/^(px|em|in)\\b/)) {\n            if (isEndLine(stream)) {\n              state.cursorHalf = 0;\n            }\n\n            return \"unit\";\n          }\n\n          if (stream.match(keywordsRegexp)) {\n            if (isEndLine(stream)) {\n              state.cursorHalf = 0;\n            }\n\n            return \"keyword\";\n          }\n\n          if (stream.match(/^url/) && stream.peek() === \"(\") {\n            state.tokenizer = urlTokens;\n\n            if (isEndLine(stream)) {\n              state.cursorHalf = 0;\n            }\n\n            return \"atom\";\n          } // Variables\n\n\n          if (ch === \"$\") {\n            stream.next();\n            stream.eatWhile(/[\\w-]/);\n\n            if (isEndLine(stream)) {\n              state.cursorHalf = 0;\n            }\n\n            return \"variable-2\";\n          } // bang character for !important, !default, etc.\n\n\n          if (ch === \"!\") {\n            stream.next();\n            state.cursorHalf = 0;\n            return stream.match(/^[\\w]+/) ? \"keyword\" : \"operator\";\n          }\n\n          if (stream.match(opRegexp)) {\n            if (isEndLine(stream)) {\n              state.cursorHalf = 0;\n            }\n\n            return \"operator\";\n          } // attributes\n\n\n          if (stream.eatWhile(/[\\w-]/)) {\n            if (isEndLine(stream)) {\n              state.cursorHalf = 0;\n            }\n\n            word = stream.current().toLowerCase();\n\n            if (valueKeywords.hasOwnProperty(word)) {\n              return \"atom\";\n            } else if (colorKeywords.hasOwnProperty(word)) {\n              return \"keyword\";\n            } else if (propertyKeywords.hasOwnProperty(word)) {\n              state.prevProp = stream.current().toLowerCase();\n              return \"property\";\n            } else {\n              return \"tag\";\n            }\n          } //stream.eatSpace();\n\n\n          if (isEndLine(stream)) {\n            state.cursorHalf = 0;\n            return null;\n          }\n        } // else ends here\n\n\n      if (stream.match(opRegexp)) return \"operator\"; // If we haven't returned by now, we move 1 character\n      // and return an error\n\n      stream.next();\n      return null;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.indentCount = 0;\n      var style = state.tokenizer(stream, state);\n      var current = stream.current();\n\n      if (current === \"@return\" || current === \"}\") {\n        dedent(state);\n      }\n\n      if (style !== null) {\n        var startOfToken = stream.pos - current.length;\n        var withCurrentIndent = startOfToken + config.indentUnit * state.indentCount;\n        var newScopes = [];\n\n        for (var i = 0; i < state.scopes.length; i++) {\n          var scope = state.scopes[i];\n          if (scope.offset <= withCurrentIndent) newScopes.push(scope);\n        }\n\n        state.scopes = newScopes;\n      }\n\n      return style;\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenizer: tokenBase,\n          scopes: [{\n            offset: 0,\n            type: \"sass\"\n          }],\n          indentCount: 0,\n          cursorHalf: 0,\n          // cursor half tells us if cursor lies after (1)\n          // or before (0) colon (well... more or less)\n          definedVars: [],\n          definedMixins: []\n        };\n      },\n      token: function (stream, state) {\n        var style = tokenLexer(stream, state);\n        state.lastToken = {\n          style: style,\n          content: stream.current()\n        };\n        return style;\n      },\n      indent: function (state) {\n        return state.scopes[0].offset;\n      }\n    };\n  }, \"css\");\n  CodeMirror.defineMIME(\"text/x-sass\", \"sass\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  \"use strict\";\n\n  if (typeof exports === \"object\" && typeof module === \"object\") {\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/overlay\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../coffeescript/coffeescript\"), require(\"../css/css\"), require(\"../sass/sass\"), require(\"../stylus/stylus\"), require(\"../pug/pug\"), require(\"../handlebars/handlebars\"));\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/overlay\", \"../xml/xml\", \"../javascript/javascript\", \"../coffeescript/coffeescript\", \"../css/css\", \"../sass/sass\", \"../stylus/stylus\", \"../pug/pug\", \"../handlebars/handlebars\"], mod);\n  } else {\n    // Plain browser env\n    mod(CodeMirror);\n  }\n})(function (CodeMirror) {\n  var tagLanguages = {\n    script: [[\"lang\", /coffee(script)?/, \"coffeescript\"], [\"type\", /^(?:text|application)\\/(?:x-)?coffee(?:script)?$/, \"coffeescript\"], [\"lang\", /^babel$/, \"javascript\"], [\"type\", /^text\\/babel$/, \"javascript\"], [\"type\", /^text\\/ecmascript-\\d+$/, \"javascript\"]],\n    style: [[\"lang\", /^stylus$/i, \"stylus\"], [\"lang\", /^sass$/i, \"sass\"], [\"lang\", /^less$/i, \"text/x-less\"], [\"lang\", /^scss$/i, \"text/x-scss\"], [\"type\", /^(text\\/)?(x-)?styl(us)?$/i, \"stylus\"], [\"type\", /^text\\/sass/i, \"sass\"], [\"type\", /^(text\\/)?(x-)?scss$/i, \"text/x-scss\"], [\"type\", /^(text\\/)?(x-)?less$/i, \"text/x-less\"]],\n    template: [[\"lang\", /^vue-template$/i, \"vue\"], [\"lang\", /^pug$/i, \"pug\"], [\"lang\", /^handlebars$/i, \"handlebars\"], [\"type\", /^(text\\/)?(x-)?pug$/i, \"pug\"], [\"type\", /^text\\/x-handlebars-template$/i, \"handlebars\"], [null, null, \"vue-template\"]]\n  };\n  CodeMirror.defineMode(\"vue-template\", function (config, parserConfig) {\n    var mustacheOverlay = {\n      token: function (stream) {\n        if (stream.match(/^\\{\\{.*?\\}\\}/)) return \"meta mustache\";\n\n        while (stream.next() && !stream.match(\"{{\", false)) {}\n\n        return null;\n      }\n    };\n    return CodeMirror.overlayMode(CodeMirror.getMode(config, parserConfig.backdrop || \"text/html\"), mustacheOverlay);\n  });\n  CodeMirror.defineMode(\"vue\", function (config) {\n    return CodeMirror.getMode(config, {\n      name: \"htmlmixed\",\n      tags: tagLanguages\n    });\n  }, \"htmlmixed\", \"xml\", \"javascript\", \"coffeescript\", \"css\", \"sass\", \"stylus\", \"pug\", \"handlebars\");\n  CodeMirror.defineMIME(\"script/x-vue\", \"vue\");\n  CodeMirror.defineMIME(\"text/x-vue\", \"vue\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [],\n          orig = states[state];\n\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n\n    var mode = {\n      startState: function () {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function (state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) s.persistentStates = {\n          mode: pers.mode,\n          spec: pers.spec,\n          state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n          next: s.persistentStates\n        };\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function (state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) result.push(val[i] && val[i].replace(/\\./g, \" \"));\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) if (matches[j]) state.pending.push({\n              text: matches[j],\n              token: rule.token[j - 1]\n            });\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function () {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function (state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function (stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n\n        stream.pos = Math.min(state.basePos, state.overlayPos); // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function (state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function (state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.multiplexingMode = function (outer\n  /*, others */\n  ) {\n    // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n    var others = Array.prototype.slice.call(arguments, 1);\n\n    function indexOf(string, pattern, from, returnEnd) {\n      if (typeof pattern == \"string\") {\n        var found = string.indexOf(pattern, from);\n        return returnEnd && found > -1 ? found + pattern.length : found;\n      }\n\n      var m = pattern.exec(from ? string.slice(from) : string);\n      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n    }\n\n    return {\n      startState: function () {\n        return {\n          outer: CodeMirror.startState(outer),\n          innerActive: null,\n          inner: null\n        };\n      },\n      copyState: function (state) {\n        return {\n          outer: CodeMirror.copyState(outer, state.outer),\n          innerActive: state.innerActive,\n          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n        };\n      },\n      token: function (stream, state) {\n        if (!state.innerActive) {\n          var cutOff = Infinity,\n              oldContent = stream.string;\n\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            var found = indexOf(oldContent, other.open, stream.pos);\n\n            if (found == stream.pos) {\n              if (!other.parseDelimiters) stream.match(other.open);\n              state.innerActive = other; // Get the outer indent, making sure to handle CodeMirror.Pass\n\n              var outerIndent = 0;\n\n              if (outer.indent) {\n                var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n              }\n\n              state.inner = CodeMirror.startState(other.mode, outerIndent);\n              return other.delimStyle && other.delimStyle + \" \" + other.delimStyle + \"-open\";\n            } else if (found != -1 && found < cutOff) {\n              cutOff = found;\n            }\n          }\n\n          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n          var outerToken = outer.token(stream, state.outer);\n          if (cutOff != Infinity) stream.string = oldContent;\n          return outerToken;\n        } else {\n          var curInner = state.innerActive,\n              oldContent = stream.string;\n\n          if (!curInner.close && stream.sol()) {\n            state.innerActive = state.inner = null;\n            return this.token(stream, state);\n          }\n\n          var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n\n          if (found == stream.pos && !curInner.parseDelimiters) {\n            stream.match(curInner.close);\n            state.innerActive = state.inner = null;\n            return curInner.delimStyle && curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\";\n          }\n\n          if (found > -1) stream.string = oldContent.slice(0, found);\n          var innerToken = curInner.mode.token(stream, state.inner);\n          if (found > -1) stream.string = oldContent;\n          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;\n\n          if (curInner.innerStyle) {\n            if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;else innerToken = curInner.innerStyle;\n          }\n\n          return innerToken;\n        }\n      },\n      indent: function (state, textAfter, line) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (!mode.indent) return CodeMirror.Pass;\n        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n      },\n      blankLine: function (state) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n\n        if (mode.blankLine) {\n          mode.blankLine(state.innerActive ? state.inner : state.outer);\n        }\n\n        if (!state.innerActive) {\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n\n            if (other.open === \"\\n\") {\n              state.innerActive = other;\n              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n            }\n          }\n        } else if (state.innerActive.close === \"\\n\") {\n          state.innerActive = state.inner = null;\n        }\n      },\n      electricChars: outer.electricChars,\n      innerMode: function (state) {\n        return state.inner ? {\n          state: state.inner,\n          mode: state.innerActive.mode\n        } : {\n          state: state.outer,\n          mode: outer\n        };\n      }\n    };\n  };\n});"],"sourceRoot":""}