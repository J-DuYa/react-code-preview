{"version":3,"sources":["../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/php/php.js","../node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","regexp","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","keywords","str","obj","words","split","matchSequence","list","end","escapes","phpString","patterns","tokenize","slice","closing","escaped","tokStack","pop","next","phpString_","phpKeywords","phpAtoms","phpBuiltin","registerHelper","join","phpConfig","helperType","blockKeywords","defKeywords","atoms","builtin","multiLineStrings","hooks","eatWhile","before","quoted","eat","delim","push","_stream","phpMode","php","startOpen","curMode","curState","pending","htmlNew","phpNew","isPHP","sol","context","prev","pos","m","openPHP","blockCommentStart","blockCommentEnd","lineComment","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","ch","inBlock","doctype","depth","baseState","tagStart","quote","closure","isInAttribute","inAttribute","stringStartCol","column","terminator","Context","startOfLine","this","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","electricInput","configuration","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","reverse","mimeModes"],"mappings":"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","file":"static/js/436.12f88daf.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) dest.unshift(source[i]);\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function (state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function (state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../clike/clike\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../clike/clike\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function keywords(str) {\n    var obj = {},\n        words = str.split(\" \");\n\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n\n    return obj;\n  } // Helper for phpString\n\n\n  function matchSequence(list, end, escapes) {\n    if (list.length == 0) return phpString(end);\n    return function (stream, state) {\n      var patterns = list[0];\n\n      for (var i = 0; i < patterns.length; i++) if (stream.match(patterns[i][0])) {\n        state.tokenize = matchSequence(list.slice(1), end);\n        return patterns[i][1];\n      }\n\n      state.tokenize = phpString(end, escapes);\n      return \"string\";\n    };\n  }\n\n  function phpString(closing, escapes) {\n    return function (stream, state) {\n      return phpString_(stream, state, closing, escapes);\n    };\n  }\n\n  function phpString_(stream, state, closing, escapes) {\n    // \"Complex\" syntax\n    if (escapes !== false && stream.match(\"${\", false) || stream.match(\"{$\", false)) {\n      state.tokenize = null;\n      return \"string\";\n    } // Simple syntax\n\n\n    if (escapes !== false && stream.match(/^\\$[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      // After the variable name there may appear array or object operator.\n      if (stream.match(\"[\", false)) {\n        // Match array operator\n        state.tokenize = matchSequence([[[\"[\", null]], [[/\\d[\\w\\.]*/, \"number\"], [/\\$[a-zA-Z_][a-zA-Z0-9_]*/, \"variable-2\"], [/[\\w\\$]+/, \"variable\"]], [[\"]\", null]]], closing, escapes);\n      }\n\n      if (stream.match(/\\-\\>\\w/, false)) {\n        // Match object operator\n        state.tokenize = matchSequence([[[\"->\", null]], [[/[\\w]+/, \"variable\"]]], closing, escapes);\n      }\n\n      return \"variable-2\";\n    }\n\n    var escaped = false; // Normal string\n\n    while (!stream.eol() && (escaped || escapes === false || !stream.match(\"{$\", false) && !stream.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*|\\$\\{)/, false))) {\n      if (!escaped && stream.match(closing)) {\n        state.tokenize = null;\n        state.tokStack.pop();\n        state.tokStack.pop();\n        break;\n      }\n\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n\n    return \"string\";\n  }\n\n  var phpKeywords = \"abstract and array as break case catch class clone const continue declare default \" + \"do else elseif enddeclare endfor endforeach endif endswitch endwhile extends final \" + \"for foreach function global goto if implements interface instanceof namespace \" + \"new or private protected public static switch throw trait try use var while xor \" + \"die echo empty exit eval include include_once isset list require require_once return \" + \"print unset __halt_compiler self static parent yield insteadof finally\";\n  var phpAtoms = \"true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__ __TRAIT__\";\n  var phpBuiltin = \"func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex hex2bin sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents file_put_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists array_intersect_key array_combine array_column pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport http_response_code get_declared_traits getimagesizefromstring socket_import_stream stream_set_chunk_size trait_exists header_register_callback class_uses session_status session_register_shutdown echo print global static exit array empty eval isset unset die include require include_once require_once json_decode json_encode json_last_error json_last_error_msg curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt_array curl_setopt curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect_errno mysqli_connect_error mysqli_connect mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error_list mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field_direct mysqli_fetch_field mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_charset mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_version mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_reap_async_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_init mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count\";\n  CodeMirror.registerHelper(\"hintWords\", \"php\", [phpKeywords, phpAtoms, phpBuiltin].join(\" \").split(\" \"));\n  CodeMirror.registerHelper(\"wordChars\", \"php\", /[\\w$]/);\n  var phpConfig = {\n    name: \"clike\",\n    helperType: \"php\",\n    keywords: keywords(phpKeywords),\n    blockKeywords: keywords(\"catch do else elseif for foreach if switch try while finally\"),\n    defKeywords: keywords(\"class function interface namespace trait\"),\n    atoms: keywords(phpAtoms),\n    builtin: keywords(phpBuiltin),\n    multiLineStrings: true,\n    hooks: {\n      \"$\": function (stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"variable-2\";\n      },\n      \"<\": function (stream, state) {\n        var before;\n\n        if (before = stream.match(/<<\\s*/)) {\n          var quoted = stream.eat(/['\"]/);\n          stream.eatWhile(/[\\w\\.]/);\n          var delim = stream.current().slice(before[0].length + (quoted ? 2 : 1));\n          if (quoted) stream.eat(quoted);\n\n          if (delim) {\n            (state.tokStack || (state.tokStack = [])).push(delim, 0);\n            state.tokenize = phpString(delim, quoted != \"'\");\n            return \"string\";\n          }\n        }\n\n        return false;\n      },\n      \"#\": function (stream) {\n        while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n\n        return \"comment\";\n      },\n      \"/\": function (stream) {\n        if (stream.eat(\"/\")) {\n          while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n\n          return \"comment\";\n        }\n\n        return false;\n      },\n      '\"': function (_stream, state) {\n        (state.tokStack || (state.tokStack = [])).push('\"', 0);\n        state.tokenize = phpString('\"');\n        return \"string\";\n      },\n      \"{\": function (_stream, state) {\n        if (state.tokStack && state.tokStack.length) state.tokStack[state.tokStack.length - 1]++;\n        return false;\n      },\n      \"}\": function (_stream, state) {\n        if (state.tokStack && state.tokStack.length > 0 && ! --state.tokStack[state.tokStack.length - 1]) {\n          state.tokenize = phpString(state.tokStack[state.tokStack.length - 2]);\n        }\n\n        return false;\n      }\n    }\n  };\n  CodeMirror.defineMode(\"php\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, parserConfig && parserConfig.htmlMode || \"text/html\");\n    var phpMode = CodeMirror.getMode(config, phpConfig);\n\n    function dispatch(stream, state) {\n      var isPHP = state.curMode == phpMode;\n      if (stream.sol() && state.pending && state.pending != '\"' && state.pending != \"'\") state.pending = null;\n\n      if (!isPHP) {\n        if (stream.match(/^<\\?\\w*/)) {\n          state.curMode = phpMode;\n          if (!state.php) state.php = CodeMirror.startState(phpMode, htmlMode.indent(state.html, \"\", \"\"));\n          state.curState = state.php;\n          return \"meta\";\n        }\n\n        if (state.pending == '\"' || state.pending == \"'\") {\n          while (!stream.eol() && stream.next() != state.pending) {}\n\n          var style = \"string\";\n        } else if (state.pending && stream.pos < state.pending.end) {\n          stream.pos = state.pending.end;\n          var style = state.pending.style;\n        } else {\n          var style = htmlMode.token(stream, state.curState);\n        }\n\n        if (state.pending) state.pending = null;\n        var cur = stream.current(),\n            openPHP = cur.search(/<\\?/),\n            m;\n\n        if (openPHP != -1) {\n          if (style == \"string\" && (m = cur.match(/[\\'\\\"]$/)) && !/\\?>/.test(cur)) state.pending = m[0];else state.pending = {\n            end: stream.pos,\n            style: style\n          };\n          stream.backUp(cur.length - openPHP);\n        }\n\n        return style;\n      } else if (isPHP && state.php.tokenize == null && stream.match(\"?>\")) {\n        state.curMode = htmlMode;\n        state.curState = state.html;\n        if (!state.php.context.prev) state.php = null;\n        return \"meta\";\n      } else {\n        return phpMode.token(stream, state.curState);\n      }\n    }\n\n    return {\n      startState: function () {\n        var html = CodeMirror.startState(htmlMode);\n        var php = parserConfig.startOpen ? CodeMirror.startState(phpMode) : null;\n        return {\n          html: html,\n          php: php,\n          curMode: parserConfig.startOpen ? phpMode : htmlMode,\n          curState: parserConfig.startOpen ? php : html,\n          pending: null\n        };\n      },\n      copyState: function (state) {\n        var html = state.html,\n            htmlNew = CodeMirror.copyState(htmlMode, html),\n            php = state.php,\n            phpNew = php && CodeMirror.copyState(phpMode, php),\n            cur;\n        if (state.curMode == htmlMode) cur = htmlNew;else cur = phpNew;\n        return {\n          html: htmlNew,\n          php: phpNew,\n          curMode: state.curMode,\n          curState: cur,\n          pending: state.pending\n        };\n      },\n      token: dispatch,\n      indent: function (state, textAfter, line) {\n        if (state.curMode != phpMode && /^\\s*<\\//.test(textAfter) || state.curMode == phpMode && /^\\?>/.test(textAfter)) return htmlMode.indent(state.html, textAfter, line);\n        return state.curMode.indent(state.curState, textAfter, line);\n      },\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n      innerMode: function (state) {\n        return {\n          state: state.curState,\n          mode: state.curMode\n        };\n      }\n    };\n  }, \"htmlmixed\", \"clike\");\n  CodeMirror.defineMIME(\"application/x-httpd-php\", \"php\");\n  CodeMirror.defineMIME(\"application/x-httpd-php-open\", {\n    name: \"php\",\n    startOpen: true\n  });\n  CodeMirror.defineMIME(\"text/x-php\", phpConfig);\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) config[prop] = defaults[prop];\n\n    for (var prop in config_) config[prop] = config_[prop]; // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function (baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function (stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function (state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) context = context.prev;\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function (state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function (state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function (state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) if (cx.tagName) context.push(cx.tagName);\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});"],"sourceRoot":""}