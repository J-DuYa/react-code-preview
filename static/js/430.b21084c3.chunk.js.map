{"version":3,"sources":["../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/django/django.js","../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","regexp","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","keywords","filters","operators","wordOperators","tokenBase","tokenize","inVariable","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","join","blockCommentStart","blockCommentEnd","htmlBase","djangoInner","overlayMode","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","start","pos","combineTokens","electricChars","blankLine","baseToken","overlayToken","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","ch","inBlock","eatWhile","doctype","depth","baseState","tagStart","quote","closure","isInAttribute","inAttribute","stringStartCol","column","terminator","Context","startOfLine","this","prev","context","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","fullLine","alignCDATA","tagAfter","grabbers","electricInput","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","push","reverse","mimeModes"],"mappings":"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","file":"static/js/430.b21084c3.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) dest.unshift(source[i]);\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function (state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function (state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function () {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\", \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\", \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\", \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\", \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\", \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\", \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\", \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\", \"default\", \"default_if_none\", \"dictsort\", \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\", \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\", \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\", \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\", \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\", \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\", \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\", \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\", \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\", \"unordered_list\", \"upper\", \"urlencode\", \"urlize\", \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\"); // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n\n    function tokenBase(stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      } // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n\n\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n\n      return null;\n    } // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n\n\n    function inString(delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next(); // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    } // Apply Django template variable syntax highlighting\n\n\n    function inVariable(stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        } // Dot followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for property.\");\n        }\n      } // Attempt to match a pipe that precedes a filter\n\n\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        } // Pipe followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for filter.\");\n        }\n      } // Highlight properties\n\n\n      if (state.waitProperty) {\n        state.waitProperty = false;\n\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true; // A property can be followed by another property\n\n          state.waitPipe = true; // A property can be followed by a filter\n\n          return \"property\";\n        }\n      } // Highlight filters\n\n\n      if (state.waitFilter) {\n        state.waitFilter = false;\n\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      } // Ignore all white spaces\n\n\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      } // Identify numbers\n\n\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      } // Identify strings\n\n\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      } // Attempt to find the variable\n\n\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true; // A property can be followed by a filter\n\n        return \"variable\";\n      } // If found closing tag reset\n\n\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      } // If nothing was found, advance to the next character\n\n\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag(stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        } // Dot followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for property.\");\n        }\n      } // Attempt to match a pipe that precedes a filter\n\n\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        } // Pipe followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for filter.\");\n        }\n      } // Highlight properties\n\n\n      if (state.waitProperty) {\n        state.waitProperty = false;\n\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true; // A property can be followed by another property\n\n          state.waitPipe = true; // A property can be followed by a filter\n\n          return \"property\";\n        }\n      } // Highlight filters\n\n\n      if (state.waitFilter) {\n        state.waitFilter = false;\n\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      } // Ignore all white spaces\n\n\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      } // Identify numbers\n\n\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      } // Identify strings\n\n\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      } // Attempt to match an operator\n\n\n      if (stream.match(operators)) {\n        return \"operator\";\n      } // Attempt to match a word operator\n\n\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      } // Attempt to match a keyword\n\n\n      var keywordMatch = stream.match(keywords);\n\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n\n        return \"keyword\";\n      } // Attempt to match a variable\n\n\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true; // A property can be followed by a filter\n\n        return \"variable\";\n      } // If found closing tag reset\n\n\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null; // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false; // Release the \"lock\"\n\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n\n        return \"tag\";\n      } // If nothing was found, advance to the next character\n\n\n      stream.next();\n      return \"null\";\n    } // Mark everything as comment inside the tag and the tag itself.\n\n\n    function inComment(stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase;else stream.skipToEnd();\n      return \"comment\";\n    } // Mark everything as a comment until the `blockcomment` tag closes.\n\n\n    function inBlockComment(stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenize: tokenBase\n        };\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n  CodeMirror.defineMode(\"django\", function (config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function () {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function (state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function (stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n\n        stream.pos = Math.min(state.basePos, state.overlayPos); // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function (state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function (state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) config[prop] = defaults[prop];\n\n    for (var prop in config_) config[prop] = config_[prop]; // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function (baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function (stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function (state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) context = context.prev;\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function (state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function (state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function (state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) if (cx.tagName) context.push(cx.tagName);\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});"],"sourceRoot":""}