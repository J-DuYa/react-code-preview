{"version":3,"sources":["../node_modules/codemirror/mode/handlebars/handlebars.js","../node_modules/codemirror/addon/mode/simple.js","../node_modules/codemirror/addon/mode/multiplex.js"],"names":["CodeMirror","defineSimpleMode","start","regex","push","token","handlebars","pop","dash_comment","comment","meta","blockCommentStart","blockCommentEnd","defineMode","config","parserConfig","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","defineMIME","mod","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","next","this","apply","replace","result","i","length","asToken","tokenFunction","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","endScan","exec","current","index","curState","rule","matches","sol","stack","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","lState","startState","forceEnd","indentFunction","textAfter","line","dontIndentStates","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","outer","others","Array","prototype","call","arguments","string","pattern","from","returnEnd","found","innerActive","inner","curInner","oldContent","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken","blankLine","electricChars"],"mappings":"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","file":"static/js/14.8aac77ec.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [{\n      regex: /\\{\\{!--/,\n      push: \"dash_comment\",\n      token: \"comment\"\n    }, {\n      regex: /\\{\\{!/,\n      push: \"comment\",\n      token: \"comment\"\n    }, {\n      regex: /\\{\\{/,\n      push: \"handlebars\",\n      token: \"tag\"\n    }],\n    handlebars: [{\n      regex: /\\}\\}/,\n      pop: true,\n      token: \"tag\"\n    }, // Double and single quotes\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }, {\n      regex: /'(?:[^\\\\']|\\\\.)*'?/,\n      token: \"string\"\n    }, // Handlebars keywords\n    {\n      regex: />|[#\\/]([A-Za-z_]\\w*)/,\n      token: \"keyword\"\n    }, {\n      regex: /(?:else|this)\\b/,\n      token: \"keyword\"\n    }, // Numeral\n    {\n      regex: /\\d+/i,\n      token: \"number\"\n    }, // Atoms like = and .\n    {\n      regex: /=|~|@|true|false/,\n      token: \"atom\"\n    }, // Paths\n    {\n      regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/,\n      token: \"variable-2\"\n    }],\n    dash_comment: [{\n      regex: /--\\}\\}/,\n      pop: true,\n      token: \"comment\"\n    }, // Commented code\n    {\n      regex: /./,\n      token: \"comment\"\n    }],\n    comment: [{\n      regex: /\\}\\}/,\n      pop: true,\n      token: \"comment\"\n    }, {\n      regex: /./,\n      token: \"comment\"\n    }],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n  CodeMirror.defineMode(\"handlebars\", function (config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, parserConfig.base), {\n      open: \"{{\",\n      close: \"}}\",\n      mode: handlebars,\n      parseDelimiters: true\n    });\n  });\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [],\n          orig = states[state];\n\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n\n    var mode = {\n      startState: function () {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function (state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) s.persistentStates = {\n          mode: pers.mode,\n          spec: pers.spec,\n          state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n          next: s.persistentStates\n        };\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function (state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) result.push(val[i] && val[i].replace(/\\./g, \" \"));\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) if (matches[j]) state.pending.push({\n              text: matches[j],\n              token: rule.token[j - 1]\n            });\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.multiplexingMode = function (outer\n  /*, others */\n  ) {\n    // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n    var others = Array.prototype.slice.call(arguments, 1);\n\n    function indexOf(string, pattern, from, returnEnd) {\n      if (typeof pattern == \"string\") {\n        var found = string.indexOf(pattern, from);\n        return returnEnd && found > -1 ? found + pattern.length : found;\n      }\n\n      var m = pattern.exec(from ? string.slice(from) : string);\n      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n    }\n\n    return {\n      startState: function () {\n        return {\n          outer: CodeMirror.startState(outer),\n          innerActive: null,\n          inner: null\n        };\n      },\n      copyState: function (state) {\n        return {\n          outer: CodeMirror.copyState(outer, state.outer),\n          innerActive: state.innerActive,\n          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n        };\n      },\n      token: function (stream, state) {\n        if (!state.innerActive) {\n          var cutOff = Infinity,\n              oldContent = stream.string;\n\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            var found = indexOf(oldContent, other.open, stream.pos);\n\n            if (found == stream.pos) {\n              if (!other.parseDelimiters) stream.match(other.open);\n              state.innerActive = other; // Get the outer indent, making sure to handle CodeMirror.Pass\n\n              var outerIndent = 0;\n\n              if (outer.indent) {\n                var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n              }\n\n              state.inner = CodeMirror.startState(other.mode, outerIndent);\n              return other.delimStyle && other.delimStyle + \" \" + other.delimStyle + \"-open\";\n            } else if (found != -1 && found < cutOff) {\n              cutOff = found;\n            }\n          }\n\n          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n          var outerToken = outer.token(stream, state.outer);\n          if (cutOff != Infinity) stream.string = oldContent;\n          return outerToken;\n        } else {\n          var curInner = state.innerActive,\n              oldContent = stream.string;\n\n          if (!curInner.close && stream.sol()) {\n            state.innerActive = state.inner = null;\n            return this.token(stream, state);\n          }\n\n          var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n\n          if (found == stream.pos && !curInner.parseDelimiters) {\n            stream.match(curInner.close);\n            state.innerActive = state.inner = null;\n            return curInner.delimStyle && curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\";\n          }\n\n          if (found > -1) stream.string = oldContent.slice(0, found);\n          var innerToken = curInner.mode.token(stream, state.inner);\n          if (found > -1) stream.string = oldContent;\n          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;\n\n          if (curInner.innerStyle) {\n            if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;else innerToken = curInner.innerStyle;\n          }\n\n          return innerToken;\n        }\n      },\n      indent: function (state, textAfter, line) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (!mode.indent) return CodeMirror.Pass;\n        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n      },\n      blankLine: function (state) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n\n        if (mode.blankLine) {\n          mode.blankLine(state.innerActive ? state.inner : state.outer);\n        }\n\n        if (!state.innerActive) {\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n\n            if (other.open === \"\\n\") {\n              state.innerActive = other;\n              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n            }\n          }\n        } else if (state.innerActive.close === \"\\n\") {\n          state.innerActive = state.inner = null;\n        }\n      },\n      electricChars: outer.electricChars,\n      innerMode: function (state) {\n        return state.inner ? {\n          state: state.inner,\n          mode: state.innerActive.mode\n        } : {\n          state: state.outer,\n          mode: outer\n        };\n      }\n    };\n  };\n});"],"sourceRoot":""}