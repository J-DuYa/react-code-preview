{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/soy/soy.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","name","mod","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","copyState","local","line","innerMode","paramData","noEndTag","soyState","variableScope","reduceIndent","indentingTags","Object","keys","filter","textMode","modes","attributes","uri","trusted_resource_uri","css","js","statementIndent","last","array","tokenUntil","untilRegExp","oldString","string","substr","pos","index","result","hideFirstChars","localStates","prepend","list","element","popcontext","scope","variables","previousContext","kind","templates","scopes","quoteKind","concat","map","loose","pop","skipToEnd","paramRe","push","peek","substring","selfClosed","indexOf","contains","prevTag","indentingTag","tagError","top","lineComment","blockCommentContinue","useInnerComments","fold","registerHelper"],"mappings":"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","file":"static/js/16.0761bdaa.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) config[prop] = defaults[prop];\n\n    for (var prop in config_) config[prop] = config_[prop]; // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function (baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function (stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function (state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) context = context.prev;\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function (state) {\n        if (state.state == attrValueState) state.state = attrState;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) dest.unshift(source[i]);\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function (state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function (state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var paramData = {\n    noEndTag: true,\n    soyState: \"param-def\"\n  };\n  var tags = {\n    \"alias\": {\n      noEndTag: true\n    },\n    \"delpackage\": {\n      noEndTag: true\n    },\n    \"namespace\": {\n      noEndTag: true,\n      soyState: \"namespace-def\"\n    },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"@state?\": paramData,\n    \"template\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"literal\": {},\n    \"msg\": {},\n    \"fallbackmsg\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"let\": {\n      soyState: \"var-def\"\n    },\n    \"if\": {},\n    \"elseif\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"else\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"switch\": {},\n    \"case\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"default\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"foreach\": {\n      variableScope: true,\n      soyState: \"var-def\"\n    },\n    \"ifempty\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"for\": {\n      variableScope: true,\n      soyState: \"var-def\"\n    },\n    \"call\": {\n      soyState: \"templ-ref\"\n    },\n    \"param\": {\n      soyState: \"param-ref\"\n    },\n    \"print\": {\n      noEndTag: true\n    },\n    \"deltemplate\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"delcall\": {\n      soyState: \"templ-ref\"\n    },\n    \"log\": {},\n    \"element\": {\n      variableScope: true\n    }\n  };\n  var indentingTags = Object.keys(tags).filter(function (tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n  CodeMirror.defineMode(\"soy\", function (config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {\n        name: \"text/html\",\n        multilineTagIndentFactor: 2,\n        multilineTagIndentPastTag: false\n      }),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {\n        name: \"text/javascript\",\n        statementIndent: 2 * config.indentUnit\n      })\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n\n        if (indent) return null;\n      }\n\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n\n      var result = stream.hideFirstChars(state.indent, function () {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n\n      state.context = state.context.previousContext;\n    } // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n\n\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : loose ? \"variable\" : \"variable-2 error\";\n    } // Data for an open soy tag.\n\n\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    return {\n      startState: function () {\n        return {\n          soyState: [],\n          templates: null,\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n      copyState: function (state) {\n        return {\n          tag: state.tag,\n          // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          templates: state.templates,\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent,\n          // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          localStates: state.localStates.map(function (localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n      token: function (stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n\n              for (var match; match = paramRe.exec(current);) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.templates = prepend(state.templates, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop(); // If the first character is '.', it can only be a local template.\n\n              if (match[0][0] == '.') {\n                return \"variable-2\";\n              } // Otherwise\n\n\n              return \"variable\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-type\":\n            if (stream.peek() == \"}\") {\n              state.soyState.pop();\n              return null;\n            }\n\n            if (stream.eatWhile(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit * (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n\n              return \"attribute\";\n            } else if (match = stream.match(/([\\w]+)(?=\\()/)) {\n              return \"variable callee\";\n            } else if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match;\n              return \"string\";\n            }\n\n            if (stream.match(/(null|true|false)(?!\\w)/) || stream.match(/0x([0-9a-fA-F]{2,})/) || stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n              return \"atom\";\n            }\n\n            if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n              // Tokenize filter, binary, null propagator, and equality operators.\n              return \"operator\";\n            }\n\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              return ref(state.variables, match[1]);\n            }\n\n            if (match = stream.match(/^\\w+/)) {\n              return /^(?:as|and|or|not|in)$/.test(match[0]) ? \"keyword\" : null;\n            }\n\n            stream.next();\n            return null;\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.indent -= config.indentUnit;\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\"; // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\") state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n          state.soyState.push(\"tag\");\n          var tagError = false;\n\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            } // If a new tag, open a new context.\n\n\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null); // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n\n          return (tagError ? \"error \" : \"\") + \"keyword\"; // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n      indent: function (state, textAfter, line) {\n        var indent = state.indent,\n            top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n\n        var localState = last(state.localStates);\n\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n\n        return indent;\n      },\n      innerMode: function (state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;else return last(state.localStates);\n      },\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat([\"css\", \"debugger\"]));\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});"],"sourceRoot":""}