{"version":3,"sources":["../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/htmlembedded/htmlembedded.js","../node_modules/codemirror/addon/mode/multiplex.js","../node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","regexp","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","closeComment","multiplexingMode","open","openComment","delimStyle","skipTo","skipToEnd","scriptStartRegex","scriptEndRegex","scriptingModeSpec","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","returnEnd","found","m","index","innerActive","inner","curInner","oldContent","sol","this","pos","parseDelimiters","innerToken","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken","blankLine","electricChars","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","tokenize","ch","next","eat","inBlock","eatWhile","doctype","depth","baseState","tagStart","quote","closure","isInAttribute","inAttribute","stringStartCol","column","terminator","Context","startOfLine","prev","context","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","push","reverse","mimeModes"],"mappings":"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","file":"static/js/429.52833b4c.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) dest.unshift(source[i]);\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function (state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function (state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/multiplex\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/multiplex\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function (config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\";\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {\n        token: function (stream) {\n          stream.skipTo(closeComment) || stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n  CodeMirror.defineMIME(\"application/x-ejs\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"javascript\"\n  });\n  CodeMirror.defineMIME(\"application/x-aspx\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-csharp\"\n  });\n  CodeMirror.defineMIME(\"application/x-jsp\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-java\"\n  });\n  CodeMirror.defineMIME(\"application/x-erb\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"ruby\"\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.multiplexingMode = function (outer\n  /*, others */\n  ) {\n    // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n    var others = Array.prototype.slice.call(arguments, 1);\n\n    function indexOf(string, pattern, from, returnEnd) {\n      if (typeof pattern == \"string\") {\n        var found = string.indexOf(pattern, from);\n        return returnEnd && found > -1 ? found + pattern.length : found;\n      }\n\n      var m = pattern.exec(from ? string.slice(from) : string);\n      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n    }\n\n    return {\n      startState: function () {\n        return {\n          outer: CodeMirror.startState(outer),\n          innerActive: null,\n          inner: null\n        };\n      },\n      copyState: function (state) {\n        return {\n          outer: CodeMirror.copyState(outer, state.outer),\n          innerActive: state.innerActive,\n          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n        };\n      },\n      token: function (stream, state) {\n        if (!state.innerActive) {\n          var cutOff = Infinity,\n              oldContent = stream.string;\n\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            var found = indexOf(oldContent, other.open, stream.pos);\n\n            if (found == stream.pos) {\n              if (!other.parseDelimiters) stream.match(other.open);\n              state.innerActive = other; // Get the outer indent, making sure to handle CodeMirror.Pass\n\n              var outerIndent = 0;\n\n              if (outer.indent) {\n                var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n              }\n\n              state.inner = CodeMirror.startState(other.mode, outerIndent);\n              return other.delimStyle && other.delimStyle + \" \" + other.delimStyle + \"-open\";\n            } else if (found != -1 && found < cutOff) {\n              cutOff = found;\n            }\n          }\n\n          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n          var outerToken = outer.token(stream, state.outer);\n          if (cutOff != Infinity) stream.string = oldContent;\n          return outerToken;\n        } else {\n          var curInner = state.innerActive,\n              oldContent = stream.string;\n\n          if (!curInner.close && stream.sol()) {\n            state.innerActive = state.inner = null;\n            return this.token(stream, state);\n          }\n\n          var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n\n          if (found == stream.pos && !curInner.parseDelimiters) {\n            stream.match(curInner.close);\n            state.innerActive = state.inner = null;\n            return curInner.delimStyle && curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\";\n          }\n\n          if (found > -1) stream.string = oldContent.slice(0, found);\n          var innerToken = curInner.mode.token(stream, state.inner);\n          if (found > -1) stream.string = oldContent;\n          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;\n\n          if (curInner.innerStyle) {\n            if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;else innerToken = curInner.innerStyle;\n          }\n\n          return innerToken;\n        }\n      },\n      indent: function (state, textAfter, line) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (!mode.indent) return CodeMirror.Pass;\n        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n      },\n      blankLine: function (state) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n\n        if (mode.blankLine) {\n          mode.blankLine(state.innerActive ? state.inner : state.outer);\n        }\n\n        if (!state.innerActive) {\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n\n            if (other.open === \"\\n\") {\n              state.innerActive = other;\n              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n            }\n          }\n        } else if (state.innerActive.close === \"\\n\") {\n          state.innerActive = state.inner = null;\n        }\n      },\n      electricChars: outer.electricChars,\n      innerMode: function (state) {\n        return state.inner ? {\n          state: state.inner,\n          mode: state.innerActive.mode\n        } : {\n          state: state.outer,\n          mode: outer\n        };\n      }\n    };\n  };\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) config[prop] = defaults[prop];\n\n    for (var prop in config_) config[prop] = config_[prop]; // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function (baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function (stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function (state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) context = context.prev;\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function (state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function (state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function (state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) if (cx.tagName) context.push(cx.tagName);\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});"],"sourceRoot":""}