{"version":3,"sources":["../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/soy/soy.js","../node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","regexp","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","paramData","noEndTag","soyState","variableScope","reduceIndent","indentingTags","Object","keys","filter","textMode","modes","attributes","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","tokenUntil","untilRegExp","sol","eat","oldString","string","substr","pos","index","result","hideFirstChars","localStates","prepend","list","element","next","popcontext","context","scope","variables","previousContext","Context","this","kind","templates","scopes","quoteKind","concat","map","loose","pop","skipToEnd","paramRe","push","peek","eatWhile","substring","selfClosed","indexOf","contains","prevTag","indentingTag","tagError","top","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","defaults","prop","inText","chain","parser","tokenize","ch","inBlock","doctype","depth","baseState","tagStart","quote","closure","isInAttribute","inAttribute","stringStartCol","column","terminator","startOfLine","prev","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","reverse","mimeModes"],"mappings":"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","file":"static/js/437.7a63161b.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) dest.unshift(source[i]);\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function (state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function (state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var paramData = {\n    noEndTag: true,\n    soyState: \"param-def\"\n  };\n  var tags = {\n    \"alias\": {\n      noEndTag: true\n    },\n    \"delpackage\": {\n      noEndTag: true\n    },\n    \"namespace\": {\n      noEndTag: true,\n      soyState: \"namespace-def\"\n    },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"@state?\": paramData,\n    \"template\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"literal\": {},\n    \"msg\": {},\n    \"fallbackmsg\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"select\": {},\n    \"plural\": {},\n    \"let\": {\n      soyState: \"var-def\"\n    },\n    \"if\": {},\n    \"elseif\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"else\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"switch\": {},\n    \"case\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"default\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"foreach\": {\n      variableScope: true,\n      soyState: \"var-def\"\n    },\n    \"ifempty\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"for\": {\n      variableScope: true,\n      soyState: \"var-def\"\n    },\n    \"call\": {\n      soyState: \"templ-ref\"\n    },\n    \"param\": {\n      soyState: \"param-ref\"\n    },\n    \"print\": {\n      noEndTag: true\n    },\n    \"deltemplate\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"delcall\": {\n      soyState: \"templ-ref\"\n    },\n    \"log\": {},\n    \"element\": {\n      variableScope: true\n    }\n  };\n  var indentingTags = Object.keys(tags).filter(function (tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n  CodeMirror.defineMode(\"soy\", function (config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {\n        name: \"text/html\",\n        multilineTagIndentFactor: 2,\n        multilineTagIndentPastTag: false\n      }),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {\n        name: \"text/javascript\",\n        statementIndent: 2 * config.indentUnit\n      })\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n\n        if (indent) return null;\n      }\n\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n\n      var result = stream.hideFirstChars(state.indent, function () {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n\n      state.context = state.context.previousContext;\n    } // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n\n\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : loose ? \"variable\" : \"variable-2 error\";\n    } // Data for an open soy tag.\n\n\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    return {\n      startState: function () {\n        return {\n          soyState: [],\n          templates: null,\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n      copyState: function (state) {\n        return {\n          tag: state.tag,\n          // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          templates: state.templates,\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent,\n          // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          localStates: state.localStates.map(function (localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n      token: function (stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n\n              for (var match; match = paramRe.exec(current);) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.templates = prepend(state.templates, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop(); // If the first character is '.', it can only be a local template.\n\n              if (match[0][0] == '.') {\n                return \"variable-2\";\n              } // Otherwise\n\n\n              return \"variable\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-type\":\n            if (stream.peek() == \"}\") {\n              state.soyState.pop();\n              return null;\n            }\n\n            if (stream.eatWhile(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit * (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n\n              return \"attribute\";\n            } else if (match = stream.match(/([\\w]+)(?=\\()/)) {\n              return \"variable callee\";\n            } else if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match;\n              return \"string\";\n            }\n\n            if (stream.match(/(null|true|false)(?!\\w)/) || stream.match(/0x([0-9a-fA-F]{2,})/) || stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n              return \"atom\";\n            }\n\n            if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n              // Tokenize filter, binary, null propagator, and equality operators.\n              return \"operator\";\n            }\n\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              return ref(state.variables, match[1]);\n            }\n\n            if (match = stream.match(/^\\w+/)) {\n              return /^(?:as|and|or|not|in)$/.test(match[0]) ? \"keyword\" : null;\n            }\n\n            stream.next();\n            return null;\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.indent -= config.indentUnit;\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\"; // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\") state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n          state.soyState.push(\"tag\");\n          var tagError = false;\n\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            } // If a new tag, open a new context.\n\n\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null); // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n\n          return (tagError ? \"error \" : \"\") + \"keyword\"; // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n      indent: function (state, textAfter, line) {\n        var indent = state.indent,\n            top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n\n        var localState = last(state.localStates);\n\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n\n        return indent;\n      },\n      innerMode: function (state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;else return last(state.localStates);\n      },\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat([\"css\", \"debugger\"]));\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) config[prop] = defaults[prop];\n\n    for (var prop in config_) config[prop] = config_[prop]; // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function (baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function (stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function (state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) context = context.prev;\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function (state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function (state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function (state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) if (cx.tagName) context.push(cx.tagName);\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});"],"sourceRoot":""}